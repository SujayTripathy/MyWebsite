{"version":3,"sources":["Header.js","backgroundvid.js","About.js","Gallery.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","alt","React","Component","Backgroundvid","autoPlay","muted","loop","type","About","Gallery","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mVAGaA,G,YAAb,iLAEQ,OACE,4BAAQC,UAAU,UACd,yBAAKC,IAAI,kFAAkFC,IAAI,eACjG,wBAAIF,UAAU,eACZ,qCACA,wCACA,6CARd,GAA4BG,IAAMC,YCArBC,G,MAAb,iLAEQ,OAAO,6BACC,2BAAOC,UAAQ,EAACC,OAAK,EAACC,MAAI,GACtB,4BAAQP,IAAI,iHAAiHQ,KAAK,eAEtI,yBAAKT,UAAU,aACf,wBAAIA,UAAU,WAAd,kBACA,qIACA,sJAThB,GAAmCG,IAAMC,YCA5BM,G,MAAb,iLAEQ,OACI,yBAAKV,UAAU,SACX,wBAAIA,UAAU,OAAd,qDACA,wBAAIA,UAAU,QAAd,qHAAuI,0BAAMA,UAAU,aAAhB,SAAvI,QAAoL,0BAAMA,UAAU,aAAhB,UAApL,2DALhB,GAA2BG,IAAMC,YCCpBO,G,MAAb,iLAEQ,OACR,yBAAKX,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,MAAMC,IAAI,iDACzB,yBAAKD,UAAU,OAAOC,IAAI,cAC1B,yBAAKD,UAAU,MAAMC,IAAI,eACzB,yBAAKD,UAAU,MAAMC,IAAI,cACzB,yBAAKD,UAAU,OAAOC,IAAI,eAC1B,yBAAKD,UAAU,MAAMC,IAAI,aACzB,yBAAKD,UAAU,MAAMC,IAAI,eAE3B,yBAAKD,UAAU,UACb,yBAAKA,UAAU,MAAMC,IAAI,mBACzB,yBAAKD,UAAU,OAAOC,IAAI,cAC1B,yBAAKD,UAAU,MAAMC,IAAI,iDACzB,yBAAKD,UAAU,MAAMC,IAAI,sBACzB,yBAAKD,UAAU,MAAMC,IAAI,cACzB,yBAAKD,UAAU,MAAMC,IAAI,oBAE3B,yBAAKD,UAAU,UACb,yBAAKA,UAAU,MAAMC,IAAI,iDACzB,yBAAKD,UAAU,OAAOC,IAAI,cAC1B,yBAAKD,UAAU,MAAMC,IAAI,eACzB,yBAAKD,UAAU,MAAMC,IAAI,cACzB,yBAAKD,UAAU,OAAOC,IAAI,eAC1B,yBAAKD,UAAU,MAAMC,IAAI,aACzB,yBAAKD,UAAU,MAAMC,IAAI,eAE3B,yBAAKD,UAAU,UACb,yBAAKA,UAAU,MAAMC,IAAI,mBACzB,yBAAKD,UAAU,OAAOC,IAAI,cAC1B,yBAAKD,UAAU,MAAMC,IAAI,iDACzB,yBAAKD,UAAU,MAAMC,IAAI,sBACzB,yBAAKD,UAAU,OAAOC,IAAI,cAC1B,yBAAKD,UAAU,MAAMC,IAAI,yBApC7B,GAA6BE,IAAMC,YCiBpBQ,E,iLAXX,OAAQ,yBAAKZ,UAAU,OACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANYG,IAAMC,WCIJS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7f0f3df5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css'\r\n\r\nexport class Header extends React.Component{\r\n    render(){\r\n        return (\r\n          <header className=\"Header\">\r\n              <img src=\"https://cdn0.iconfinder.com/data/icons/shopping-and-commerce-4-4/48/168-512.png\" alt=\"Controller\"></img>\r\n            <ul className=\"HeaderLinks\">\r\n              <li>About</li>\r\n              <li>Projects</li>\r\n              <li>Contact</li>\r\n            </ul>\r\n          </header>\r\n          )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './backgroundvid.css'\r\n\r\nexport class Backgroundvid extends React.Component{\r\n    render(){\r\n        return(<div>\r\n                <video autoPlay muted loop>\r\n                    <source src=\"https://res.cloudinary.com/du9o2fwol/video/upload/v1573721364/Other_Places_Lothric_Dark_Souls_III_1_m7hsxf.mp4\" type=\"video/mp4\"></source>\r\n                </video>\r\n                <div className=\"Container\">\r\n                <h1 className=\"Overlay\">Hi, I'm Sujay.</h1>\r\n                <h2>I'm an aspiring game developer seeking to share fun and exciting experiences through games I work on!</h2>\r\n                <h2>Apart from games, I also have a keen interest in Immersive Technology, and experimenting with its possibilities.</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './About.css';\r\n\r\nexport class About extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"About\">\r\n                <h2 className=\"uni\">I'm currently a senior at the University of Utah.</h2>\r\n                <h5 className=\"desc\">I love all things related to game development, ranging from lighting, to gameplay engineering. I'm well versed in <mark className=\"important\">Unity</mark> and <mark className=\"important\">Unreal</mark> and love whipping\r\n                    out a prototype or two for fun.\r\n                </h5>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Gallery.css';\r\n  \r\n\r\nexport class Gallery extends React.Component{\r\n    render(){\r\n        return(\r\n<div className=\"row\">\r\n  <div className=\"column\">\r\n    <img className=\"Mix\" src=\"https://www.w3schools.com/w3images/paris.jpg\" />\r\n    <img className=\"Mix2\" src=\"rocks.jpg\" />\r\n    <img className=\"Mix\" src=\"falls2.jpg\" />\r\n    <img className=\"Mix\" src=\"paris.jpg\" />\r\n    <img className=\"Mix2\" src=\"nature.jpg\" />\r\n    <img className=\"Mix\" src=\"mist.jpg\" />\r\n    <img className=\"Mix\" src=\"paris.jpg\" />\r\n  </div>\r\n  <div className=\"column\">\r\n    <img className=\"Mix\" src=\"underwater.jpg\" />\r\n    <img className=\"Mix2\" src=\"ocean.jpg\" />\r\n    <img className=\"Mix\" src=\"https://www.w3schools.com/w3images/paris.jpg\" />\r\n    <img className=\"Mix\" src=\"mountainskies.jpg\" />\r\n    <img className=\"Mix\" src=\"rocks.jpg\" />\r\n    <img className=\"Mix\" src=\"underwater.jpg\" />\r\n  </div>\r\n  <div className=\"column\">\r\n    <img className=\"Mix\" src=\"https://www.w3schools.com/w3images/paris.jpg\" />\r\n    <img className=\"Mix2\" src=\"rocks.jpg\" />\r\n    <img className=\"Mix\" src=\"falls2.jpg\" />\r\n    <img className=\"Mix\" src=\"paris.jpg\" />\r\n    <img className=\"Mix2\" src=\"nature.jpg\" />\r\n    <img className=\"Mix\" src=\"mist.jpg\" />\r\n    <img className=\"Mix\" src=\"paris.jpg\" />\r\n  </div>\r\n  <div className=\"column\">\r\n    <img className=\"Mix\" src=\"underwater.jpg\" />\r\n    <img className=\"Mix2\" src=\"ocean.jpg\" />\r\n    <img className=\"Mix\" src=\"https://www.w3schools.com/w3images/paris.jpg\" />\r\n    <img className=\"Mix\" src=\"mountainskies.jpg\" />\r\n    <img className=\"Mix2\" src=\"rocks.jpg\" />\r\n    <img className=\"Mix\" src=\"underwater.jpg\" />\r\n  </div>\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n  ","import React from 'react';\nimport './App.css';\nimport {Header} from './Header';\nimport {Backgroundvid} from './backgroundvid';\nimport {About} from './About';\nimport {Gallery} from './Gallery';\n\n\nclass App extends React.Component{\n  render(){\n    return (<div className=\"App\">\n      <Header></Header>\n      <Backgroundvid></Backgroundvid>\n      <About></About>\n      <Gallery></Gallery>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}